[{"id":"b7edb48f.cf6568","type":"tab","label":"Flow 3","disabled":false,"info":""},{"id":"e36a7219.5c62f","type":"ui_template","z":"b7edb48f.cf6568","group":"","name":"D3 libraries","order":0,"width":0,"height":0,"format":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/4.10.2/d3.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/d3-jetpack-module@0.0.19/build/d3-jetpack-module.min.js\"></script>\n","storeOutMessages":true,"fwdInMessages":true,"templateScope":"global","x":135,"y":324,"wires":[[]]},{"id":"7010bfa0.fdc47","type":"json","z":"b7edb48f.cf6568","name":"","property":"payload","action":"","pretty":false,"x":564,"y":385,"wires":[["adf08c2a.dd279"]]},{"id":"99e4eca3.7a8af","type":"delay","z":"b7edb48f.cf6568","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"10","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"x":373.00001525878906,"y":385.00000953674316,"wires":[["7010bfa0.fdc47"]]},{"id":"adf08c2a.dd279","type":"function","z":"b7edb48f.cf6568","name":"RAZ to XY","func":"// Range Azimuth and Zenith to X, Y for display\n// 0 rad is straight down from Node\nif (!msg.payload.twr) return;\nif (!msg.payload.twr.raz) return;\n\ntwr = msg.payload.twr;\nx = twr.raz[0] * Math.cos(twr.raz[1]-Math.PI/2.0);\ny = -twr.raz[0] * Math.sin(twr.raz[1]-Math.PI/2.0);\n\nreturn {\"topic\":msg.payload.uid, \n    \"payload\":[\n        {\"id\":msg.payload.uid,\"x\":x,\"y\":y,\"radius\":2,\"is_average\":false,\"age\":0.0}\n        ]};","outputs":1,"noerr":0,"x":746.9999809265137,"y":386.00000286102295,"wires":[["53808daf.732ae4"]]},{"id":"53808daf.732ae4","type":"ui_template","z":"b7edb48f.cf6568","group":"352e8057.feb55","name":"PdoaView","order":1,"width":0,"height":0,"format":"<style type=\"text/css\"> \n    #pdoaview {\n        background-color: whitesmoke;\n        width: 600px;\n        height: 600px;\n    }\n\n    #pdoaview rect {\n        fill: steelblue;\n    }\n\n    #pdoaview circle {\n        fill: red;\n        opacity: 0.7;\n    }\n\n    .grid line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n    }\n     \n    #pdoaview .grid path {\n        stroke-width: 0;\n        fill: none;\n    }\n\n    #pdoaview .domain {\n        fill: none;\n    }\n\n    .chart text {\n        fill: white;\n        font: 10px sans-serif;\n        text-anchor: end;\n    }\n</style>\n\n<svg id=\"pdoaview\">\n    <!-- svg content goes here -->\n</svg>\n\n<script type=\"text/javascript\">\n(function(scope) { \nvar timer = setInterval(function() { //check that the d3 libs are loaded, if not wait\n    if (!window.d3) return;\n    clearInterval(timer);\n    \n    // set the dimensions and margins of the graph\n    var margin = {top: 10, right: 10, bottom: 30, left: 60}\n    var width = 630 - margin.left - margin.right;\n    var height = 600 - margin.top - margin.bottom;\n    console.log(\"width:\" + width);\n    console.log(\"height:\" + height);\n    var scale = 10; //getURLParameter('scale');\n\n    var x = d3.scaleLinear()\n                .range([margin.left, width])\n                .domain([-scale/2, scale/2]);\n     \n    var y = d3.scaleLinear()\n                .range([height, margin.top])\n                .domain([scale,0]);\n\n\n    // gridlines in x axis function\n    function make_x_gridlines() {\t\t\n        return d3.axisBottom(x).ticks(scale);\n    }\n     \n     // gridlines in y axis function\n    function make_y_gridlines() {\t\t\n        return d3.axisLeft(y).ticks(scale);\n    }\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#pdoaview\")\n        .append(\"svg:svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n\n    // add the X gridlines\n    svg.append(\"g\")\n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\"+(height)+\")\")\n        .call(make_x_gridlines()\n        .tickSize(-height+margin.top)\n        .tickFormat(\"\")\n 
